package net.wasys.getdoc.domain.enumeration;

import net.wasys.getdoc.domain.entity.CampoAbstract;
import net.wasys.getdoc.domain.entity.GrupoAbstract;

public class CampoMap {

	public enum GrupoEnum {
		DADOS_PESSOAIS("Dados do Inscrito"),
		ISENCAO_DISCIPLINA("Isenção de Disciplina"),
		REVISAO_ISENCAO_DISCIPLINA("Revisão Isenção de Disciplina"),
		PRE_ANALISE_ISENCAO_DISCIPLINA("Pré-Análise de Isenção de Disciplina"),
		DADOS_DO_INSCRITO("Dados do Candidato (Curso/IES)"),
		MEMBRO_FAMILIAR("Membro Familiar"),
		COMPOSICAO_FAMILIAR("Composição Familiar"),
		REVISAO_ISENCAO("Revisão de Isenção"),
		DADOS_DE_IMPORTACAO("Dados de Importação"),
		DADOS_DA_ISENCAO("Dados da Isenção"),
		DADOS_PROCESSO_ISENCAO("Dados Processo Isenção"),
		COMPOSICAO_MATERIAS_ISENTAS("Composição Matérias Isentas"),
		DADOS_DA_ENTREVISTA("Dados da Entrevista"),
		DADOS_DE_ANALISE_DE_PROCESSO("Dados de Análise de Processo"),
		MATERIA_ISENTA("Matéria Isenta"),
		MATERIA_ISENTA_REAPROVEITAR(null);
		private String nome;
		GrupoEnum(String nome) {
			this.nome = nome;
		}
		public String getNome() {
			return nome;
		}
	}

	public enum CampoEnum {

		//Grupo Dados do Inscrito
		EMAIL(GrupoEnum.DADOS_DO_INSCRITO, "E-MAIL"),
		MATRICULA(GrupoEnum.DADOS_DO_INSCRITO, "MATRÍCULA"),
		PERIODO_DE_INGRESSO(GrupoEnum.DADOS_DO_INSCRITO, "PERÍODO DE INGRESSO"),
		FORMA_DE_INGRESSO(GrupoEnum.DADOS_DO_INSCRITO, "FORMA DE INGRESSO"),
		INSTITUICAO(GrupoEnum.DADOS_DO_INSCRITO, "INSTITUIÇÃO"),
		REGIONAL(GrupoEnum.DADOS_DO_INSCRITO, "REGIONAL"),
		CAMPUS(GrupoEnum.DADOS_DO_INSCRITO, "CAMPUS"),
		CANDIDATO_CPF(GrupoEnum.DADOS_DO_INSCRITO, "CPF"),
		NUM_INSCRICAO(GrupoEnum.DADOS_DO_INSCRITO,"NÚMERO DE INSCRIÇÃO"),
		NUM_CANDIDATO(GrupoEnum.DADOS_DO_INSCRITO,"NÚMERO DO CANDIDATO"),
		DATA_VINCULO_SIA(GrupoEnum.DADOS_DO_INSCRITO,"ÚLTIMA DATA VÍNCULO COM SIA"),
		CURSO(GrupoEnum.DADOS_DO_INSCRITO,"CURSO"),
		SITUACAO_ALUNO(GrupoEnum.DADOS_DO_INSCRITO, "SITUAÇÃO ALUNO"),
		DATA_CADASTRO(GrupoEnum.DADOS_DO_INSCRITO,"DATA DE CADASTRO"),
		NOME(GrupoEnum.DADOS_DO_INSCRITO, "NOME COMPLETO"),
		PASSAPORTE(GrupoEnum.DADOS_DO_INSCRITO, "PASSAPORTE"),
		TELEFONE(GrupoEnum.DADOS_DO_INSCRITO, "TELEFONE"),
		ANALISE_FEITA_FOI_PRE_ANALISE_ISENCAO_DISCIPLINA(GrupoEnum.PRE_ANALISE_ISENCAO_DISCIPLINA, "ANALISE FEITA FOI"),
		RESULTADO_PRE_ANALISE_ISENCAO_DISCIPLINA(GrupoEnum.PRE_ANALISE_ISENCAO_DISCIPLINA, "RESULTADO"),
		OBSERVACAO_PRE_ANALISE_ISENCAO_DISCIPLINA(GrupoEnum.PRE_ANALISE_ISENCAO_DISCIPLINA, "OBSERVAÇÃO"),
		RESULTADO_ISENCAO_DISCIPLINA(GrupoEnum.ISENCAO_DISCIPLINA, "RESULTADO"),
		OBSERVACAO_ISENCAO_DISCIPLINA(GrupoEnum.ISENCAO_DISCIPLINA, "OBSERVAÇÃO"),
		DICIPLINAS_REVER_APROVEITAMENTO_REVISAO_ISENCAO_DISCIPLINA(GrupoEnum.REVISAO_ISENCAO_DISCIPLINA, "DISCIPLINAS QUE DESEJA REVER O APROVEITAMENTO"),
		PARECER_DA_ANALISE_REVISAO_ISENCAO_DISCIPLINA(GrupoEnum.REVISAO_ISENCAO_DISCIPLINA, "PARECER DA ANÁLISE"),
		RESULTADO_REVISAO_ISENCAO_DISCIPLINA(GrupoEnum.REVISAO_ISENCAO_DISCIPLINA, "RESULTADO"),
		TURNO(GrupoEnum.DADOS_DO_INSCRITO, "TURNO"),
		ULTIMA_DATA_VINCULO_SIA(GrupoEnum.DADOS_DO_INSCRITO, "ÚLTIMA DATA VÍNCULO COM SIA"),
		TIPO_CURSO(GrupoEnum.DADOS_DO_INSCRITO, "TIPO CURSO"),
		AREA(GrupoEnum.DADOS_DO_INSCRITO, "ÁREA"),
		CURRICULO(GrupoEnum.DADOS_DO_INSCRITO, "CURRÍCULO"),
		IES_ORIGEM(GrupoEnum.DADOS_DO_INSCRITO, "IES DE ORIGEM"),
		CELULAR(GrupoEnum.DADOS_DO_INSCRITO, "CELULAR"),

		//Grupo Dados de Importação
		MODALIDADE_ENSINO(GrupoEnum.DADOS_DE_IMPORTACAO, "MODALIDADE DE ENSINO"),
		EMAIL_NOTIFICACAO(GrupoEnum.DADOS_DE_IMPORTACAO, "E-MAIL"),
		TURNO_IMPORTACAO(GrupoEnum.DADOS_DE_IMPORTACAO, "TURNO"),
		NOME_DO_CANDIDATO(GrupoEnum.DADOS_DE_IMPORTACAO, "NOME DO CANDIDATO"),
		CPF_IMPORTACAO(GrupoEnum.DADOS_DE_IMPORTACAO, "CPF"),
		LOCAL_DE_OFERTA(GrupoEnum.DADOS_DE_IMPORTACAO, "LOCAL DE OFERTA"),
		NUMERO_CHAMADA(GrupoEnum.DADOS_DE_IMPORTACAO, "CHAMADA"),
		TIPO_PROUNI(GrupoEnum.DADOS_DE_IMPORTACAO, "TIPO PROUNI"),
		CURSO_NOME_IMPORTACAO(GrupoEnum.DADOS_DE_IMPORTACAO, "CURSO"),
		PERIODO_DE_INGRESSO_IMPORTACAO(GrupoEnum.DADOS_DE_IMPORTACAO, "PERÍODO DE INGRESSO"),
		POLO_PARCEIRO(GrupoEnum.DADOS_DE_IMPORTACAO, "POLO PARCEIRO?"),
		ENDERECO(GrupoEnum.DADOS_DE_IMPORTACAO,"ENDEREÇO"),
		CIDADE(GrupoEnum.DADOS_DE_IMPORTACAO,"CIDADE"),
		CEP(GrupoEnum.DADOS_DE_IMPORTACAO,"CEP"),
		E_MAIL(GrupoEnum.DADOS_DE_IMPORTACAO,"E-MAIL"),
		DDD_TELEFONE(GrupoEnum.DADOS_DE_IMPORTACAO,"DDD/TELEFONE"),
		NOTA_MEDIA(GrupoEnum.DADOS_DE_IMPORTACAO,"NOTA MÉDIA"),
		CURSO_IMPORTACAO(GrupoEnum.DADOS_DE_IMPORTACAO,"CURSO"),
		CPF(GrupoEnum.DADOS_DE_IMPORTACAO,"CPF"),
		TIPO_BOLSA(GrupoEnum.DADOS_DE_IMPORTACAO,"TIPO DE BOLSA"),
		RESULTADO_SISPROUNI(GrupoEnum.DADOS_DE_IMPORTACAO,"RESULTADO SISPROUNI"),

		//Grupo de Isenção de Disciplina
		RESULTADO(GrupoEnum.ISENCAO_DISCIPLINA, "RESULTADO"),
		NUMERO_REQUERIMENTO(GrupoEnum.DADOS_DA_ISENCAO, "NÚMERO REQUERIMENTO"),
		SITUACAO_REQUERIMENTO(GrupoEnum.DADOS_DA_ISENCAO, "SITUAÇÃO REQUERIMENTO"),
		ID_CURRICULO_CURSO(GrupoEnum.DADOS_DA_ISENCAO, "ID CURRÍCULO CURSO"),
		FUNDAMENTACAO(GrupoEnum.DADOS_DA_ISENCAO, "FUNDAMENTAÇÃO"),

		//Grupo de Dados Processo Isenção de Disciplina
		IES_DE_GRUPO(GrupoEnum.DADOS_PROCESSO_ISENCAO,"IES DE GRUPO"),

		//Grupo Dados da Composição Familiar
		NOME_COMPOSICAO(GrupoEnum.COMPOSICAO_FAMILIAR,"NOME"),

		//Grupo Dados da Membro Familiar
		NOME_MEMBRO_FAMILIAR(GrupoEnum.MEMBRO_FAMILIAR, "NOME"),
		DATA_NASCIMENTO(GrupoEnum.MEMBRO_FAMILIAR, "DATA DE NASCIMENTO"),
		RENDA(GrupoEnum.MEMBRO_FAMILIAR, "RENDA"),
		PARENTESCO(GrupoEnum.MEMBRO_FAMILIAR, "PARENTESCO"),

		//Grupo Dados Pessoais
		CPF_CNPJ(GrupoEnum.DADOS_PESSOAIS, "CPF / CNPJ"),
		NOME_COMPLETO(GrupoEnum.DADOS_PESSOAIS, "NOME COMPLETO"),

		//Grupo de Revisão de Isenção de Disciplina
		RESULTADO_REVISAO_ISENCAO(GrupoEnum.REVISAO_ISENCAO,"RESULTADO"),

		//Grupo de Matéria Isentas
		IES_DE_ORIGEM(GrupoEnum.MATERIA_ISENTA,"IES DE ORIGEM"),
		CURSO_DE_ORIGEM(GrupoEnum.MATERIA_ISENTA, "CURSO DE ORIGEM"),
		IES_DE_ORIGEM_REAPROVEITAR(GrupoEnum.MATERIA_ISENTA_REAPROVEITAR,"IES DE ORIGEM"),
		CURSO_DE_ORIGEM_REAPROVEITAR(GrupoEnum.MATERIA_ISENTA_REAPROVEITAR, "CURSO DE ORIGEM"),
		DISCIPLINAS_APROVADA_ORIGEM(GrupoEnum.MATERIA_ISENTA_REAPROVEITAR,"DISCIPLINAS APROVADAS NA ORIGEM"),
		DISCIPLINAS_ISENTAS_ORIGEM(GrupoEnum.MATERIA_ISENTA_REAPROVEITAR, "DISCIPLINAS ISENTAS NA ORIGEM"),
		ISENCOES_CONCEDIDAS(GrupoEnum.MATERIA_ISENTA_REAPROVEITAR,"ISENÇÕES CONCEDIDAS"),
		DISCIPLINAS_REPROVADAS_ORIGEM(GrupoEnum.MATERIA_ISENTA_REAPROVEITAR, "DISCIPLINAS REPROVADAS NA ORIGEM"),
		CURRICULO_ATUAL(GrupoEnum.MATERIA_ISENTA_REAPROVEITAR,"CURRÍCULO ATUAL DA ANÁLISE"),


		//Grupo Dados da Entrevista
		MODALIDADE_DE_CONCORRÊNCIA(GrupoEnum.DADOS_DA_ENTREVISTA,"MODALIDADE DE CONCORRÊNCIA"),
		RACA_COR_DO_CANDIDATO(GrupoEnum.DADOS_DA_ENTREVISTA, "1 - RAÇA/COR DO CANDIDATO"),
		CANDIDATO_E_DEFICIENTE(GrupoEnum.DADOS_DA_ENTREVISTA, "2 - CANDIDATO É DEFICIENTE?"),
		ENSINO_MEDIO_EM(GrupoEnum.DADOS_DA_ENTREVISTA, "3 - ENSINO MÉDIO EM"),
		PROFESSOR_DA_REDE_PUBLICA(GrupoEnum.DADOS_DA_ENTREVISTA, "4 - PROFESSOR DA REDE PÚBLICA?"),
		VINCULO_COM_IES_PUBLICA(GrupoEnum.DADOS_DA_ENTREVISTA, "5 - VINCULO COM IES PÚBLICA?"),
		FORMACAO_COMPLEMENTAR_AO_CURSO_CLASSIFICADO(GrupoEnum.DADOS_DA_ENTREVISTA, "6 - FORMAÇÃO COMPLEMENTAR AO CURSO CLASSIFICADO?"),
		HABILITACAO_DO_CURSO_DE_FORMACAO(GrupoEnum.DADOS_DA_ENTREVISTA, "6.2 - HABILITAÇÃO DO CURSO DE FORMAÇÃO"),
		CURSO_DE_FORMACAO(GrupoEnum.DADOS_DA_ENTREVISTA, "6.1 - CURSO DE FORMAÇÃO"),

		//Grupo Dados de Analise de Processo
		DOCUMENTOS_MINIMOS(GrupoEnum.DADOS_DE_ANALISE_DE_PROCESSO,"DOCUMENTOS MÍNIMOS"),
		ENTREVISTA_CONCLUIDA(GrupoEnum.DADOS_DE_ANALISE_DE_PROCESSO,"ENTREVISTA CONCLUÍDA"),
		;

		private GrupoEnum grupo;
		private String nome;
		CampoEnum(GrupoEnum grupo, String nome) {
			this.grupo = grupo;
			this.nome = nome;
		}
		public GrupoEnum getGrupo() {
			return grupo;
		}
		public String getNome() {
			return nome;
		}

		public boolean equals(CampoAbstract campo) {
			GrupoAbstract grupo = campo.getGrupo();
			String grupoNome = grupo.getNome();
			String campoNome = campo.getNome();
			return getGrupo().getNome().equals(grupoNome) && getNome().equals(campoNome);
		}
	}
}


